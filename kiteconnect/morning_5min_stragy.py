from kiteconnect import KiteConnect
from set_token import *
import os
import shutil
import pyautogui
import cv2
import time
import numpy as np

fnolist =  ['AUROPHARMA', 'AARTIIND', 'ADANIENT', 'ADANIPORTS', 'AMARAJABAT', 'AMBUJACEM', 'APLLTD', 'APOLLOHOSP', 'APOLLOTYRE', 'ASHOKLEY', 'ASIANPAINT', 'AUBANK', 'AXISBANK', 'BAJAJFINSV', 'BEL', 'BERGEPAINT', 'BHARATFORG', 'BHEL', 'BIOCON', 'BRITANNIA', 'CADILAHC', 'CHOLAFIN', 'COALINDIA', 'CONCOR', 'CUMMINSIND', 'BANKBARODA', 'CANBK', 'COFORGE', 'COLPAL', 'DEEPAKNTR', 'DIVISLAB', 'DLF', 'FEDERALBNK', 'DRREDDY', 'EICHERMOT', 'ESCORTS', 'GAIL', 'GLENMARK', 'GODREJCP', 'GODREJPROP', 'GRANULES', 'GRASIM', 'HCLTECH', 'HDFC', 'HDFCAMC', 'HDFCBANK', 'HEROMOTOCO', 'HINDALCO', 'HINDPETRO', 'HINDUNILVR', 'ICICIBANK', 'ICICIPRULI', 'INDIGO', 'INDUSTOWER', 'IOC', 'ITC', 'JINDALSTEL', 'JSWSTEEL', 'JUBLFOOD', 'KOTAKBANK', 'L&TFH', 'LT', 'LTTS', 'M&M', 'M&MFIN', 'MANAPPURAM', 'MARUTI', 'MCDOWELL-N', 'MFSL', 'MGL', 'MOTHERSUMI', 'MPHASIS', 'MRF', 'NAM-INDIA', 'NAUKRI', 'NAVINFLUOR', 'NESTLEIND', 'NTPC', 'ONGC', 'PAGEIND', 'PETRONET', 'PFIZER', 'PIDILITIND', 'PIIND', 'PVR', 'RBLBANK', 'RELIANCE', 'MINDTREE', 'SAIL', 'SBIN', 'SHREECEM', 'SRTRANSFIN', 'SUNPHARMA', 'SUNTV', 'TATACHEM', 'TATAMOTORS', 'TATAPOWER', 'TCS', 'TECHM', 'UBL', 'ULTRACEMCO', 'UPL', 'WIPRO', 'ACC', 'ALKEM', 'BAJFINANCE', 'BALKRISIND', 'BANDHANBNK', 'BATAINDIA', 'BHARTIARTL', 'HDFCLIFE', 'CUB', 'EXIDEIND', 'ICICIGI', 'IDFCFIRSTB', 'IGL', 'INDUSINDBK', 'IRCTC', 'LUPIN', 'GUJGASLTD', 'MARICO', 'LICHSGFIN', 'NATIONALUM', 'MUTHOOTFIN', 'NMDC', 'RAMCOCEM', 'SBILIFE', 'SRF', 'TATACONSUM', 'TATASTEEL', 'SIEMENS', 'TITAN', 'TRENT', 'TORNTPHARM', 'TVSMOTOR', 'BOSCHLTD', 'CIPLA', 'HAVELLS', 'INFY', 'LALPATHLAB', 'LTI', 'ZEEL', 'PEL', 'PNB', 'POWERGRID', 'RECLTD', 'BAJAJ-AUTO', 'TORNTPOWER', 'VEDL', 'GMRINFRA', 'PFC', 'VOLTAS', 'BPCL', 'DABUR', 'IBULHSGFIN', 'IDEA', 'ABFRL', 'COROMANDEL', 'INDHOTEL', 'METROPOLIS']

fnoListStrike = ['AUROPHARMA21OCT800CE', 'AARTIIND21OCT960CE', 'ADANIENT21OCT1500CE', 'ADANIPORTS21OCT760CE', 'AMARAJABAT21OCT800CE', 'AMBUJACEM21OCT440CE', 'APLLTD21OCT800CE', 'APOLLOHOSP21OCT5000CE', 'APOLLOTYRE21OCT240CE', 'ASHOKLEY21OCT135CE', 'ASIANPAINT21OCT3500CE', 'AUBANK21OCT1200CE', 'AXISBANK21OCT800CE', 'BAJAJFINSV21OCT18500CE', 'BEL21OCT210CE', 'BERGEPAINT21OCT900CE', 'BHARATFORG21OCT800CE', 'BHEL21OCT60CE', 'BIOCON21OCT360CE', 'BRITANNIA21OCT4100CE', 'CADILAHC21OCT580CE', 'CHOLAFIN21OCT600CE', 'COALINDIA21OCT170CE', 'CONCOR21OCT750CE', 'CUMMINSIND21OCT1000CE', 'BANKBARODA21OCT80CE', 'CANBK21OCT140CE', 'COFORGE21OCT6000CE', 'COLPAL21OCT1700CE', 'DEEPAKNTR21OCT2600CE', 'DIVISLAB21OCT5200CE', 'DLF21OCT450CE', 'FEDERALBNK21OCT90CE', 'DRREDDY21OCT5000CE', 'EICHERMOT21OCT3000CE', 'GAIL21OCT160CE', 'GLENMARK21OCT500CE', 'GODREJCP21OCT1100CE', 'GODREJPROP21OCT2300CE', 'GRANULES21OCT320CE', 'GRASIM21OCT1700CE', 'HCLTECH21OCT1300CE', 'HDFC21OCT3000CE', 'HDFCAMC21OCT3300CE', 'HDFCBANK21OCT1640CE', 'HEROMOTOCO21OCT3000CE', 'HINDALCO21OCT500CE', 'HINDPETRO21OCT280CE', 'HINDUNILVR21OCT2800CE', 'ICICIBANK21OCT730CE', 'ICICIPRULI21OCT700CE', 'INDIGO21OCT2200CE', 'INDUSTOWER21OCT330CE', 'IOC21OCT120CE', 'ITC21OCT250CE', 'JINDALSTEL21OCT400CE', 'JSWSTEEL21OCT670CE', 'JUBLFOOD21OCT4200CE', 'KOTAKBANK21OCT2100CE', 'L&TFH21OCT90CE', 'LT21OCT1800CE', 'LTTS21OCT5000CE', 'M&M21OCT850CE', 'M&MFIN21OCT220CE', 'MANAPPURAM21OCT180CE', 'MARUTI21OCT7500CE', 'MCDOWELL-N21OCT850CE', 'MFSL21OCT1100CE', 'MGL21OCT1100CE', 'MOTHERSUMI21OCT240CE', 'MPHASIS21OCT3500CE', 'MRF21OCT90000CE', 'NAM-INDIA21OCT440CE', 'NAUKRI21OCT6700CE', 'NAVINFLUOR21OCT4000CE', 'NESTLEIND21OCT20000CE', 'NTPC21OCT125CE', 'ONGC21OCT150CE', 'PAGEIND21OCT37000CE', 'PETRONET21OCT240CE', 'PFIZER21OCT6000CE', 'PIDILITIND21OCT2500CE', 'PIIND21OCT3300CE', 'PVR21OCT1700CE', 'RBLBANK21OCT200CE', 'RELIANCE21OCT2600CE', 'MINDTREE21OCT5000CE', 'SAIL21OCT80CE', 'SBIN21OCT450CE', 'SHREECEM21OCT31000CE', 'SRTRANSFIN21OCT1400CE', 'SUNPHARMA21OCT780CE', 'SUNTV21OCT550CE', 'TATACHEM21OCT1000CE', 'TATAMOTORS21OCT350CE', 'TATAPOWER21OCT140CE', 'TCS21OCT4000CE', 'TECHM21OCT1600CE', 'UBL21OCT1600CE', 'ULTRACEMCO21OCT8000CE', 'UPL21OCT750CE', 'WIPRO21OCT700CE', 'ACC21OCT2500CE', 'ALKEM21OCT4050CE', 'BAJFINANCE21OCT8000CE', 'BALKRISIND21OCT2700CE', 'BANDHANBNK21OCT300CE', 'BATAINDIA21OCT1800CE', 'HDFCLIFE21OCT800CE', 'CUB21OCT150CE', 'EXIDEIND21OCT180CE', 'ICICIGI21OCT1600CE', 'IDFCFIRSTB21OCT50CE', 'IGL21OCT520CE', 'INDUSINDBK21OCT1160CE', 'IRCTC21OCT1520CE', 'LUPIN21OCT1000CE', 'GUJGASLTD21OCT630CE', 'MARICO21OCT600CE', 'LICHSGFIN21OCT430CE', 'NATIONALUM21OCT100CE', 'MUTHOOTFIN21OCT1600CE', 'NMDC21OCT160CE', 'RAMCOCEM21OCT1000CE', 'SBILIFE21OCT1250CE', 'SRF21OCT12000CE', 'TATACONSUM21OCT850CE', 'TATASTEEL21OCT1500CE', 'SIEMENS21OCT2200CE', 'TITAN21OCT2200CE', 'TRENT21OCT1020CE', 'TORNTPHARM21OCT3200CE', 'TVSMOTOR21OCT600CE', 'BOSCHLTD21OCT16000CE', 'CIPLA21OCT1000CE', 'HAVELLS21OCT1500CE', 'INFY21OCT1800CE', 'LALPATHLAB21OCT4000CE', 'LTI21OCT6500CE', 'PEL21OCT3000CE', 'POWERGRID21OCT185CE', 'RECLTD21OCT160CE', 'BAJAJ-AUTO21OCT4000CE', 'TORNTPOWER21OCT500CE', 'VEDL21OCT300CE', 'GMRINFRA21OCT43CE', 'PFC21OCT140CE', 'VOLTAS21OCT1300CE', 'BPCL21OCT430CE', 'DABUR21OCT700CE', 'IBULHSGFIN21OCT180CE', 'IDEA21OCT1CE', 'ABFRL21OCT250CE', 'COROMANDEL21OCT850CE', 'INDHOTEL21OCT200CE', 'METROPOLIS21OCT3100CE']

fnolistnse = []
fnolistnfo = []
factorDict = {}

def kite_get_ohlc(symbol):
    #symbol="NFO:"+symbol
    o=kite_ohlc_dict[symbol]["ohlc"]["open"]
    h=kite_ohlc_dict[symbol]["ohlc"]["high"]
    l=kite_ohlc_dict[symbol]["ohlc"]["low"]
    c=kite_ohlc_dict[symbol]["last_price"]

    return o,h,l,c

def print_all_ohlc(fnolist):
    for symbol in fnolist:
        o,h,l,c = kite_get_ohlc(symbol)
        print(symbol)
        print(o)
        print(h)
        print(l)
        print(c)
def strong_bull(fnoListStrike):
    sbull = []
    for symbol in fnoListStrike:
        o,h,l,c = kite_get_ohlc(symbol)
        if h-l == 0:
           continue 
        factor = (c-o)/(h-l)
        if c>o and factor > 0.6: 
            factorDict[symbol]=factor
            sbull.append(symbol)
    print("bull")
    print(sbull)
#    save_screenshot(sbull,"strong_bull")
def get_ohlc_dict(fnoListStike):
    for i in fnoListStrike:
        tmp_symbol="NFO:"+i
        fnolistnse.append(tmp_symbol)
    print(fnolistnse)
    ohlc_dict=kite.ohlc(fnolistnse)
    print(ohlc_dict)
    return ohlc_dict

def save_screenshot(stock_list,dir_name):
    full_dir_path = "/home/pankaj/Pictures/"+dir_name
    if os.path.isdir(full_dir_path):
        shutil.rmtree(full_dir_path)
    os.mkdir(full_dir_path)

    for stock in stock_list:
        pyautogui.click(166,122)
        pyautogui.typewrite(stock)
        time.sleep(1)
        #pyautogui.typewrite(["enter"])
        pyautogui.click(167,206)
        #pyautogui.typewrite(["enter"])
        time.sleep(1)
        image = pyautogui.screenshot()
        image = cv2.cvtColor(np.array(image),
                     cv2.COLOR_RGB2BGR)
        cv2.imwrite(full_dir_path+"/"+stock+".png", image)

def find_symbol():
    kite_ohlc_dict = get_ohlc_dict(fnoListStrike)
    print(kite_ohlc_dict)
    #print_all_ohlc(fnolistnfo)
    strong_bull(fnolistnfo)
    print(factorDict)
    Keymax = max(zip(factorDict.values(), factorDict.keys()))[1]
    print(Keymax)

def find_fno_symbol(symbol):
    pass 


kite = set_token()

kite_ohlc_dict = get_ohlc_dict(fnolist)
print_all_ohlc(fnolistnse)
strong_bull(fnolistnse)
print(factorDict)
Keymax = max(zip(factorDict.values(), factorDict.keys()))[1]
print(Keymax)
print(nse_get_fno_lot_sizes("bajaj-auto"))

def main_function():
    #find_symbol()
    #find_fnosymbol()
    #place_order
    pass
